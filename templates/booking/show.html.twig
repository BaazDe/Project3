{% extends 'base.html.twig' %}

{% block title %}Booking{% endblock %}
{% block stylesheets %}
    {{ encore_entry_link_tags('calendar') }}
{% endblock %}

{% block body %}
    <div id='external-events'></div>

    <div id='calendar-container'>
        <button><a href="{{ path('booking_calendar') }}" class="return_button"></a></button>
        <div id='calendar1'></div>
        {% for booking in bookings %}
            {{ booking.beginAt ? booking.beginAt|date(' H:i')}} {{ booking.title }} <br>
        {% endfor %}
    </div>

{% endblock %}

{% block javascripts %}
    {{ encore_entry_script_tags('calendar') }}
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@4.1.0/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@4.1.0/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@4.1.0/main.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@4.1.0/main.min.js"></script>

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function() {
            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendarInteraction.Draggable;

            var containerEl = document.getElementById('external-events');
            var calendarEl = document.getElementById('calendar1');
            var checkbox = document.getElementById('drop-remove');




            // initialize the external events
            // -----------------------------------------------------------------

            new Draggable(containerEl, {
                itemSelector: '.fc-event',
                eventData: function(eventEl) {
                    return {
                        title: eventEl.innerText,
                        duration: '04:00:00'
                    };
                }
            });

            // -----------------------------------------------------------------

            var calendar = new Calendar(calendarEl, {
                plugins: [ 'interaction', 'dayGrid', 'timeGrid' ],
                header: {
                    left: 'prev,',
                    center: 'title',
                    right: 'next'
                },
                defaultView: 'timeGridDay',
                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar
                eventAllow: function(dropLocation, draggedEvent){
                    // Can an event be created from the "eventData"
                    // and passed into this callback from external?
                    // When dragging and event, its physical
                    // representation of duration is displayed
                    // so should have access before officially "dropped"

                    // Note:  works fine for internally dragged items

                    // see browser console for "invalid" draggedEvent
                    // properties access to title yeilds:
                    // " [Exception: TypeError: Cannot read property 'title' of undefined at e.get [as title] (https://fullcalendar.io/releases/core/4.0.1/main.min.js:7:22476) at e.invokeGetter (<anonymous>:2:14)]"

                    console.log(draggedEvent);


                    return true;
                },
                drop: function(info) {
                    // is the "remove after drop" checkbox checked?
                    if (checkbox.checked) {
                        // if so, remove the element from the "Draggable Events" list
                        info.draggedEl.parentNode.removeChild(info.draggedEl);
                    }
                }
            });

            calendar.render();
            calendar.setOption('local', 'fr');
        });
        setTimeout(() => {
            document.querySelector('.fc-time-grid-container').style.cssText = 'overflow: initial';
        }, 700);
    </script>
    </script>
{% endblock %}